name: java-kubernetes-pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-java:
    name: Build & Deploy Java App
    runs-on: ubuntu-latest

    steps:
      # ✅ Checkout repo
      - name: Checkout code
        uses: actions/checkout@v3

      # ✅ Setup Java + Maven cache
      - name: Set up JDK 11 with Maven cache
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'

      # ✅ Build ProductCatalogue JAR
      - name: Build ProductCatalogue
        working-directory: docker-Java-kubernetes-project/productcatalogue
        run: mvn clean install -B

      # ✅ Build Shopfront JAR
      - name: Build Shopfront
        working-directory: docker-Java-kubernetes-project/shopfront
        run: mvn clean install -B

      # ✅ Build StockManager JAR
      - name: Build StockManager
        working-directory: docker-Java-kubernetes-project/stockmanager
        run: mvn clean install -B

      # ✅ Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GHCR_PAT }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      # ✅ Build Docker images (build from each folder!)
      - name: Build ProductCatalogue Docker image
        run: |
          docker build \
            -t ghcr.io/af1nzr/productcatalogue:latest \
            docker-Java-kubernetes-project/productcatalogue

      - name: Build Shopfront Docker image
        run: |
          docker build \
            -t ghcr.io/af1nzr/shopfront:latest \
            docker-Java-kubernetes-project/shopfront

      - name: Build StockManager Docker image
        run: |
          docker build \
            -t ghcr.io/af1nzr/stockmanager:latest \
            docker-Java-kubernetes-project/stockmanager

      # ✅ Push Docker images
      - name: Push Docker images
        run: |
          docker push ghcr.io/af1nzr/productcatalogue:latest
          docker push ghcr.io/af1nzr/shopfront:latest
          docker push ghcr.io/af1nzr/stockmanager:latest

      # ✅ Setup kubeconfig
      - name: Set up kubeconfig
        run: |
          echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > kubeconfig.yaml
          mkdir -p ~/.kube
          mv kubeconfig.yaml ~/.kube/config

      # ✅ Create GHCR secret in Kubernetes (to pull private images)
      - name: Create GHCR secret in Kubernetes
        run: |
          kubectl delete secret ghcr-secret --ignore-not-found
          kubectl create secret docker-registry ghcr-secret \
            --docker-server=ghcr.io \
            --docker-username=af1nzr \
            --docker-password=${{ secrets.GHCR_PAT }} \
            --docker-email=you@example.com

      # ✅ Deploy to Kubernetes cluster
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f docker-Java-kubernetes-project/kubernetes/productcatalogue-service.yaml
          kubectl apply -f docker-Java-kubernetes-project/kubernetes/shopfront-service.yaml
          kubectl apply -f docker-Java-kubernetes-project/kubernetes/stockmanager-service.yaml

      # ✅ Wait for deployments to roll out
      - name: Wait for deployments
        run: |
          kubectl rollout status deployment/productcatalogue --timeout=120s
          kubectl rollout status deployment/shopfront --timeout=120s
          kubectl rollout status deployment/stockmanager --timeout=120s

      # ✅ Verify pods & services
      - name: Verify deployments & services
        run: |
          kubectl get pods -l app=productcatalogue
          kubectl get pods -l app=shopfront
          kubectl get pods -l app=stockmanager
          kubectl get services productcatalogue shopfront stockmanager
